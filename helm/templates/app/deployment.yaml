apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.containers.apicontainer.name }}
  namespace: default
spec:
  selector:
    matchLabels:
      app: {{ .Values.containers.apicontainer.name }}
  replicas: {{ .Values.containers.apicontainer.replicas }} # Эта строка будет игнорироваться автоскейлером
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 33%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.containers.apicontainer.name }}
    spec:
      containers:
      - name: {{ .Values.containers.apicontainer.name }}
        image: {{ .Values.containers.apicontainer.image }}
        ports:
        - containerPort: {{ .Values.containers.apicontainer.container_port }}
        startupProbe:
          httpGet:
            path: /startup
            port: {{ .Values.containers.apicontainer.app_port }}
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.containers.apicontainer.app_port }}
          initialDelaySeconds: 1
          periodSeconds: 10
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.containers.apicontainer.app_port }}
          initialDelaySeconds: 1
          periodSeconds: 10
          failureThreshold: 2
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config/config.yaml
          subPath: config.yaml
      volumes:
      - name: config-volume
        configMap:
          name: welcome-configmap

